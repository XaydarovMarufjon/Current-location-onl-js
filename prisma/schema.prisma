// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  password String
  refreshToken String?
  employee Employee[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Employee {
  id Int @id @default(autoincrement())
  fullName String
  organization String
  departmentId Int
  department Department @relation(fields: [departmentId], references: [id])
  position String
  email String @unique
  phone String
  roleId Int
  role Role @relation(fields: [roleId], references: [id])
  photo String
  userId Int  @unique
  user User? @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("employees")
}

model Department {
  id Int @id @default(autoincrement())
  name String @unique
  nameuz String?
  nameru String?
  subdepartment SubDepartment[]
  employee Employee[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("departments")
}

model SubDepartment {
  id Int @id @default(autoincrement())
  name String @unique
  nameuz String?
  nameru String?
  departmentId Int 
  department Department @relation(fields: [departmentId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("subDepartments")
}

model Role {
  id Int @id @default(autoincrement())
  name String @unique
  employee Employee[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("roles")
}

model Position {
  id Int @id @default(autoincrement())
  name String @unique
  nameuz String?
  nameru String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
