
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.10.1
 * Query Engine version: 8fde8fef4033376662cad983758335009d522acb
 */
Prisma.prismaVersion = {
  client: "4.10.1",
  engine: "8fde8fef4033376662cad983758335009d522acb"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.AboutMeansScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  toolDetails: 'toolDetails',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.AddressScalarFieldEnum = makeEnum({
  id: 'id',
  macroRegionId: 'macroRegionId',
  houseId: 'houseId',
  flatId: 'flatId',
  homeId: 'homeId',
  postCode: 'postCode',
  geoLocation: 'geoLocation',
  moreInfo: 'moreInfo',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.AsDetectedScalarFieldEnum = makeEnum({
  id: 'id',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  name: 'name'
});

exports.Prisma.AttackedDomainEmailScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  email: 'email',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.AttackedDomainScalarFieldEnum = makeEnum({
  id: 'id',
  hosting: 'hosting',
  domainSupport: 'domainSupport',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.AttackedDomainUriScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  organizationWebsite: 'organizationWebsite',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.AuthorizationUGScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  vulnerability: 'vulnerability',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.ConfidentialityScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.ConsequencesUGScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.CountryScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  digitalCode: 'digitalCode',
  letterCountryCode: 'letterCountryCode',
  countryId: 'countryId',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.CurrentStatusScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  nameStatus: 'nameStatus',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.DamageFactorsScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.DepartmentScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  listOrgId: 'listOrgId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.DetectedStatusScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.DistrictScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  districtId: 'districtId',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.EditEmployeeNameScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  fullName: 'fullName',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.EmployeeNameScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  fullName: 'fullName',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.EmployeeScalarFieldEnum = makeEnum({
  id: 'id',
  fullName: 'fullName',
  organization: 'organization',
  departmentId: 'departmentId',
  position: 'position',
  email: 'email',
  phone: 'phone',
  roleId: 'roleId',
  photo: 'photo',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.EvaluationUGScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.ExactTypeScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  objectInfluence: 'objectInfluence',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.GeographicalRegionScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.GroupComponentsScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  nameGroup: 'nameGroup',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.HarmfulDomainEmailScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  email: 'email',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.HarmfulDomainScalarFieldEnum = makeEnum({
  id: 'id',
  hosting: 'hosting',
  domainSupport: 'domainSupport',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.HarmfulDomainUriScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  organizationWebsite: 'organizationWebsite',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.HotLineScalarFieldEnum = makeEnum({
  id: 'id',
  date: 'date',
  fullName: 'fullName',
  contact: 'contact',
  description: 'description',
  answer: 'answer',
  employeeId: 'employeeId',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.IdentificationUGScalarFieldEnum = makeEnum({
  id: 'id',
  identifierUBI: 'identifierUBI',
  nameUBI: 'nameUBI',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.IdentifiedThreatScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  threatSource: 'threatSource',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.IdentifiedUGScalarFieldEnum = makeEnum({
  id: 'id',
  description: 'description',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.ImpactComponentScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  impactComponents: 'impactComponents',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.ImpactObjectScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  objectsInfluence: 'objectsInfluence',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  nameuz: 'nameuz'
});

exports.Prisma.ImpactUGScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  nameUG: 'nameUG'
});

exports.Prisma.ImplementUGScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.ListOrgScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.MacroRegionalScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.MarkLimitScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  privacySymbol: 'privacySymbol',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.MethodViolatorScalarFieldEnum = makeEnum({
  id: 'id',
  techniqueCode: 'techniqueCode',
  nameTechnique: 'nameTechnique',
  MITRECode: 'MITRECode',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.MotivationScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  hackerGroups: 'hackerGroups',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.NeighborhoodScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  neighborhoodId: 'neighborhoodId',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.PersonalScalarFieldEnum = makeEnum({
  id: 'id',
  firstName: 'firstName',
  middleName: 'middleName',
  lastName: 'lastName',
  phone: 'phone',
  email: 'email',
  positionId: 'positionId',
  listOrgId: 'listOrgId',
  departmentId: 'departmentId',
  subDepartmentId: 'subDepartmentId',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.PositionScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  listOrgId: 'listOrgId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.PresenceUGScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  vulnerability: 'vulnerability',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.RegionScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  regionId: 'regionId',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.ResGeographyScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  geographicregions: 'geographicregions',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.RoleScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.ServiceSueScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.SeverityLevelScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  severityLevel: 'severityLevel',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.SortForceScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  incidentSeverity: 'incidentSeverity',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.SortGravityScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  incidentSeverity: 'incidentSeverity',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.SubDepartmentScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  departmentId: 'departmentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.SubjectDamageScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  damage: 'damage',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.TacticsViolatorScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  objectAttack: 'objectAttack',
  stages: 'stages',
  description: 'description',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TypeComponentsScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.TypeComputerScalarFieldEnum = makeEnum({
  id: 'id',
  incidentTypes: 'incidentTypes',
  code: 'code',
  vector: 'vector',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.TypeIncidentScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  nameuz: 'nameuz',
  nameru: 'nameru',
  code: 'code',
  vector: 'vector',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.TypicalThreatScalarFieldEnum = makeEnum({
  id: 'id',
  gangTools: 'gangTools',
  toolType: 'toolType',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  username: 'username',
  password: 'password',
  refreshToken: 'refreshToken',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});

exports.Prisma.VulnerabilityScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  cellPhone: 'cellPhone',
  nameuz: 'nameuz',
  nameru: 'nameru',
  creatorId: 'creatorId',
  editorId: 'editorId',
  removerId: 'removerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
});


exports.Prisma.ModelName = makeEnum({
  User: 'User',
  Employee: 'Employee',
  Department: 'Department',
  SubDepartment: 'SubDepartment',
  Role: 'Role',
  Position: 'Position',
  TypeIncident: 'TypeIncident',
  ListOrg: 'ListOrg',
  Personal: 'Personal',
  HotLine: 'HotLine',
  ServiceSue: 'ServiceSue',
  TypeComputer: 'TypeComputer',
  AboutMeans: 'AboutMeans',
  SeverityLevel: 'SeverityLevel',
  SortForce: 'SortForce',
  SortGravity: 'SortGravity',
  MarkLimit: 'MarkLimit',
  AttackedDomain: 'AttackedDomain',
  AttackedDomainUri: 'AttackedDomainUri',
  AttackedDomainEmail: 'AttackedDomainEmail',
  HarmfulDomain: 'HarmfulDomain',
  HarmfulDomainUri: 'HarmfulDomainUri',
  HarmfulDomainEmail: 'HarmfulDomainEmail',
  Vulnerability: 'Vulnerability',
  AsDetected: 'AsDetected',
  DetectedStatus: 'DetectedStatus',
  ImpactObject: 'ImpactObject',
  TypeComponents: 'TypeComponents',
  GroupComponents: 'GroupComponents',
  ImpactComponent: 'ImpactComponent',
  Motivation: 'Motivation',
  MethodViolator: 'MethodViolator',
  TacticsViolator: 'TacticsViolator',
  TypicalThreat: 'TypicalThreat',
  ResGeography: 'ResGeography',
  CurrentStatus: 'CurrentStatus',
  Confidentiality: 'Confidentiality',
  DamageFactors: 'DamageFactors',
  SubjectDamage: 'SubjectDamage',
  EmployeeName: 'EmployeeName',
  EditEmployeeName: 'EditEmployeeName',
  IdentifiedThreat: 'IdentifiedThreat',
  IdentificationUG: 'IdentificationUG',
  ImpactUG: 'ImpactUG',
  ExactType: 'ExactType',
  ImplementUG: 'ImplementUG',
  IdentifiedUG: 'IdentifiedUG',
  ConsequencesUG: 'ConsequencesUG',
  EvaluationUG: 'EvaluationUG',
  PresenceUG: 'PresenceUG',
  AuthorizationUG: 'AuthorizationUG',
  MacroRegional: 'MacroRegional',
  GeographicalRegion: 'GeographicalRegion',
  Country: 'Country',
  Region: 'Region',
  District: 'District',
  Neighborhood: 'Neighborhood',
  Address: 'Address'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
